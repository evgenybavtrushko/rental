2017-09-26 18:33:36 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 18:33:36 INFO  MLog:124 - MLog clients using log4j logging.
2017-09-26 18:33:36 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2017-09-26 18:33:36 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge2js9q1gy2gb0vmh88p|60a906b0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge2js9q1gy2gb0vmh88p|60a906b0, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/carrental?autoReconnect=true&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 180, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2017-09-26 18:33:36 WARN  BasicResourcePool:291 - Bad pool size config, start 3 < min 5. Using 5 as start.
2017-09-26 18:33:38 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 18:33:46 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 18:33:46 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 18:33:56 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 18:33:56 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 18:33:59 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 18:33:59 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 18:50:30 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 18:50:30 INFO  MLog:124 - MLog clients using log4j logging.
2017-09-26 18:50:30 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2017-09-26 18:50:30 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge2js9q1gyo74wi2tpgl|60a906b0, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge2js9q1gyo74wi2tpgl|60a906b0, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/carrental?autoReconnect=true&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 180, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2017-09-26 18:50:30 WARN  BasicResourcePool:291 - Bad pool size config, start 3 < min 5. Using 5 as start.
2017-09-26 18:50:31 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 18:50:34 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 18:50:34 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 18:50:58 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 18:50:58 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 18:51:05 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 18:51:05 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:02:44 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:02:44 INFO  MLog:124 - MLog clients using log4j logging.
2017-09-26 19:02:44 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2017-09-26 19:02:44 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge2js9q1gz3x562ei6tn|331c94c8, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge2js9q1gz3x562ei6tn|331c94c8, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/carrental?autoReconnect=true&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 180, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2017-09-26 19:02:44 WARN  BasicResourcePool:291 - Bad pool size config, start 3 < min 5. Using 5 as start.
2017-09-26 19:02:45 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:02:46 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:02:46 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:03:01 INFO  CarDAOImpl:193 - CLientDaoImpl.checkLogin()
2017-09-26 19:03:22 INFO  CarDAOImpl:193 - CLientDaoImpl.checkLogin()
2017-09-26 19:03:22 INFO  UserServiceImpl:68 - UserServiceImpl.create()
2017-09-26 19:03:22 INFO  CarDAOImpl:141 - UserDaoImpl.save()
2017-09-26 19:03:22 INFO  CarDAOImpl:149 - UserDaoImpl.save1()
2017-09-26 19:03:23 INFO  CarDAOImpl:152 - UserDaoImpl.save2()
2017-09-26 19:03:23 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:03:23 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:04:39 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:04:40 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:07:20 INFO  OrderServiceImpl:56 - OrderServiceImpl.getByUserIdDTO()
2017-09-26 19:07:20 INFO  CarDAOImpl:119 - OrderDAOImpl.getByUserIdDTO()
2017-09-26 19:07:30 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:07:30 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:07:37 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 19:07:37 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 19:07:41 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:07:41 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:07:44 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:07:44 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:07:53 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT * FROM USER WHERE LOGIN=?
2017-09-26 19:07:53 INFO  OrderServiceImpl:56 - OrderServiceImpl.getByUserIdDTO()
2017-09-26 19:07:53 INFO  CarDAOImpl:119 - OrderDAOImpl.getByUserIdDTO()
2017-09-26 19:07:56 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:07:56 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:07:56 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT * FROM car WHERE car.active = true;
2017-09-26 19:07:59 INFO  CarServiceImpl:83 - CarServiceImpl.get()
2017-09-26 19:07:59 INFO  CarDAOImpl:117 - CarDaoImpl.get()
2017-09-26 19:08:07 INFO  OrderServiceImpl:142 - OrderServiceImpl.create()
2017-09-26 19:08:07 INFO  CarDAOImpl:117 - CarDaoImpl.get()
2017-09-26 19:08:07 INFO  CarDAOImpl:231 - OrderDAOImpl.save()
2017-09-26 19:08:08 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:08:08 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:08:08 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT * FROM car WHERE car.active = true;
2017-09-26 19:08:11 INFO  OrderServiceImpl:56 - OrderServiceImpl.getByUserIdDTO()
2017-09-26 19:08:11 INFO  CarDAOImpl:119 - OrderDAOImpl.getByUserIdDTO()
2017-09-26 19:08:11 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:08:15 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:08:15 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:08:24 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT * FROM USER WHERE LOGIN=?
2017-09-26 19:08:24 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 19:08:24 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 19:08:24 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:08:31 INFO  OrderServiceImpl:126 - OrderServiceImpl.changeOrderStatus()
2017-09-26 19:08:31 INFO  CarDAOImpl:220 - OrderDAOImpl.changeOrderStatus()
2017-09-26 19:08:31 INFO  OrderServiceImpl:71 - OrderServiceImpl.specifyTheReasonForFailure()
2017-09-26 19:08:31 INFO  CarDAOImpl:168 - OrderDAOImpl.specifyTheReasonForFailure()
2017-09-26 19:08:31 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:08:31 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:08:31 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:08:49 INFO  OrderServiceImpl:126 - OrderServiceImpl.changeOrderStatus()
2017-09-26 19:08:49 INFO  CarDAOImpl:220 - OrderDAOImpl.changeOrderStatus()
2017-09-26 19:08:49 INFO  OrderServiceImpl:71 - OrderServiceImpl.specifyTheReasonForFailure()
2017-09-26 19:08:49 INFO  CarDAOImpl:168 - OrderDAOImpl.specifyTheReasonForFailure()
2017-09-26 19:08:49 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:08:49 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:08:49 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:09:00 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 19:09:00 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 19:09:01 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:09:01 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:09:01 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:09:03 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:09:03 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:09:03 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:09:05 INFO  OrderServiceImpl:30 - OrderServiceImpl.getAllDTO()
2017-09-26 19:09:05 INFO  CarDAOImpl:107 - OrderDAOImpl.getAllDTO()
2017-09-26 19:09:05 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT order_id, name, car_name, total, date, rental_start_date, period, refusal_reason, damages, status FROM orders o JOIN user u ON o.user_id = u.user_id JOIN car c ON o.car_id = c.Car_id
2017-09-26 19:09:05 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:09:11 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 19:09:11 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 19:09:16 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:09:16 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:09:16 INFO  GooGooStatementCache:459 - Multiply-cached PreparedStatement: SELECT * FROM car WHERE car.active = true;
2017-09-26 19:09:23 INFO  OrderServiceImpl:56 - OrderServiceImpl.getByUserIdDTO()
2017-09-26 19:09:23 INFO  CarDAOImpl:119 - OrderDAOImpl.getByUserIdDTO()
2017-09-26 19:09:23 INFO  CarDAOImpl:146 - OrderDAOImpl.populateOrderDTO()
2017-09-26 19:09:37 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:09:37 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:10:55 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:10:55 INFO  MLog:124 - MLog clients using log4j logging.
2017-09-26 19:10:55 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2017-09-26 19:10:55 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge2js9q1gzege2d9681p|505c0df, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge2js9q1gzege2d9681p|505c0df, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/carrental?autoReconnect=true&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 180, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2017-09-26 19:10:55 WARN  BasicResourcePool:291 - Bad pool size config, start 3 < min 5. Using 5 as start.
2017-09-26 19:10:56 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:10:58 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:10:58 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:11:14 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:11:14 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:30:31 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:30:31 INFO  MLog:124 - MLog clients using log4j logging.
2017-09-26 19:30:31 INFO  C3P0Registry:248 - Initializing c3p0-0.9.5.2 [built 08-December-2015 22:06:04 -0800; debug? true; trace: 10]
2017-09-26 19:30:31 WARN  ActiveManagementCoordinator:92 - A C3P0Registry mbean is already registered. This probably means that an application using c3p0 was undeployed, but not all PooledDataSources were closed prior to undeployment. This may lead to resource leaks over time. Please take care to close all PooledDataSources.
2017-09-26 19:30:32 INFO  AbstractPoolBackedDataSource:527 - Initializing c3p0 pool... com.mchange.v2.c3p0.ComboPooledDataSource [ acquireIncrement -> 5, acquireRetryAttempts -> 30, acquireRetryDelay -> 1000, autoCommitOnClose -> false, automaticTestTable -> null, breakAfterAcquireFailure -> false, checkoutTimeout -> 0, connectionCustomizerClassName -> null, connectionTesterClassName -> com.mchange.v2.c3p0.impl.DefaultConnectionTester, contextClassLoaderSource -> caller, dataSourceName -> 1hge2js9q1h03nxj1iefde9|10997a33, debugUnreturnedConnectionStackTraces -> false, description -> null, driverClass -> com.mysql.jdbc.Driver, extensions -> {}, factoryClassLocation -> null, forceIgnoreUnresolvedTransactions -> false, forceSynchronousCheckins -> false, forceUseNamedDriverClass -> false, identityToken -> 1hge2js9q1h03nxj1iefde9|10997a33, idleConnectionTestPeriod -> 0, initialPoolSize -> 3, jdbcUrl -> jdbc:mysql://localhost:3306/carrental?autoReconnect=true&useSSL=false, maxAdministrativeTaskTime -> 0, maxConnectionAge -> 0, maxIdleTime -> 0, maxIdleTimeExcessConnections -> 0, maxPoolSize -> 20, maxStatements -> 180, maxStatementsPerConnection -> 0, minPoolSize -> 5, numHelperThreads -> 3, preferredTestQuery -> null, privilegeSpawnedThreads -> false, properties -> {user=******, password=******}, propertyCycle -> 0, statementCacheNumDeferredCloseThreads -> 0, testConnectionOnCheckin -> false, testConnectionOnCheckout -> false, unreturnedConnectionTimeout -> 0, userOverrides -> {}, usesTraditionalReflectiveProxies -> false ]
2017-09-26 19:30:32 WARN  BasicResourcePool:291 - Bad pool size config, start 3 < min 5. Using 5 as start.
2017-09-26 19:30:32 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:30:38 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:30:38 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
2017-09-26 19:31:24 INFO  OrderServiceImpl:43 - OrderServiceImpl.getAllNewOrdersDTO()
2017-09-26 19:31:24 INFO  CarDAOImpl:133 - OrderDAOImpl.getAllNewOrdersDTO()
2017-09-26 19:31:40 INFO  CarServiceImpl:22 - CarServiceImpl.getAllActiveCar()
2017-09-26 19:31:40 INFO  CarDAOImpl:68 - CarDaoImpl.getAllActive()
